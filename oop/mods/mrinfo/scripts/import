#!/bin/bash

int(){
python <(
cat << "EOF"
import struct
import socket

def ip_str2int(ip):
  packedIP = socket.inet_aton(ip)
  return struct.unpack("!L", packedIP)[0]

while True:
  try:
    l=raw_input().strip()
  except:
    break
  print l+' '+str(ip_str2int(l))
EOF
)
}

links2dsv(){
links=$1
task=$2
ln -sf $(realpath $links) $prefix/${task}-links.dsv
cat $links | awk '{print $1; print $2}' | sort -u | int >$prefix/${task}-nodes.dsv
}

links2csv(){
test $# -lt 2 && exit
links=$1
task=$2

echo "ip" >$prefix/$task-nodes.csv
echo "in_ip,out_ip,bw,rtt" >$prefix/$task-links.csv
cat $links | sed 's/ /,/g' | sed 's/$/,edge/' >>$prefix/$task-links.csv
cat $links | awk '{print $1; print $2}' | sort -u | sed 's/$/,node/' >>$prefix/$task-nodes.csv
}

usage(){
  echo "./import.sh <\$links> <\$task>"
}

test $# -lt 2 && usage && exit
links=$1
task=$2

prefix=$(dirname $links)
_task=_$(echo $task | sed 's/-/_/g')

links2dsv $links $task

pass="nicetry"
host="10.10.11.140"
manager_ip="10.10.222.135"
expect -c " \
  set timeout -1
  log_user 0
  spawn bash -c \"mysql -h $host -u root -p < <(cat mrinfo.sql \
    | sed 's/node_table/${_task}_node_table/g' \
    | sed 's/edge_table/${_task}_edge_table/g' \
    | sed 's|nodes.dsv|$prefix/${task}-nodes.dsv|g' \
    | sed 's|links.dsv|$prefix/${task}-links.dsv|g')\"
  expect -re \".*password.*\" {send \"$pass\r\n\"}
  expect eof \
"

links2csv $links $task

free_port=$(ss -tln \
  | awk 'NR > 1{gsub(/.*:/,"",$4); print $4}' \
  | sort -un \
  | awk -v n=1080 '$0 < n {next}; $0 == n {n++; next}; {exit}; END {print n}')
links_dir=$(dirname $links)
base_url='http://'$manager_ip':'$free_port'/'
# child: temporary http server
cwd=$(pwd)
cd $links_dir
PORT=$free_port http-server &
cd $cwd

# parent
cypher-shell -a $host -u neo4j -p "$pass" < <(cat load-csv.cql \
  | sed "s/<node>/${_task}_node_table/g" \
  | sed "s/<edge>/${_task}_edge_table/g" \
  | sed "s|<nodes>|$base_url$task-nodes.csv|g" \
  | sed "s|<links>|$base_url$task-links.csv|g")

fuser -k -n tcp $free_port
